{"version":3,"sources":["shared/baseUrl.js","Components/Header.js","Components/TimeTable/Rows.js","Components/TimeTable/Table.js","Components/TimeTable/Plot.js","Components/Main.js","store/ActionCreators.js","store/ActionTypes.js","App.js","serviceWorker.js","store/reducers/courseReducer.js","store/reducers/scheduleReducer.js","store/reducers/rootReducer.js","index.js","store/configureStore.js"],"names":["jsonUrl","Header","props","state","isNavOpen","toggleNav","bind","this","setState","Navbar","dark","expand","className","NavbarToggler","onClick","NavbarBrand","href","Collapse","isOpen","navbar","Nav","NavItem","to","Component","Rows","course","cols","Object","keys","map","field","TableData","data","slice","headers","rows","header","Table","striped","bordered","hover","responsive","Plot","courses","schedule","season","handleCourseChange","updateSchedule","findpos","pos","i","j","toString","includes","push","temp","length","allpos","x","y","concat","event","result","value","target","courselist","key","Spinner","text","disabled","Segment","Form","Field","inline","Checkbox","slider","checked","onChange","Dropdown","placeholder","fluid","multiple","search","openOnFocus","clearable","selection","options","Main","fetchCourse","fetchScehdule","path","component","withRouter","connect","dispatch","a","axios","get","then","response","errmess","type","catch","error","App","basename","process","Boolean","window","location","hostname","match","initState","courseReducer","action","scheduleReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.0bab5cc4.chunk.js","sourcesContent":["export const baseUrl = \"https://gh-flask.herokuapp.com\"\nexport const jsonUrl = \"https://jsonserver-f.herokuapp.com/itissandeep98/TimeTableManager\"","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, NavbarToggler, Collapse, Nav, NavItem } from 'reactstrap';\nimport '../App.css'\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisNavOpen: false,\n\t\t};\n\t\tthis.toggleNav = this.toggleNav.bind(this);\n\t}\n\n\ttoggleNav() {\n\t\tthis.setState({\n\t\t\tisNavOpen: !this.state.isNavOpen\n\t\t});\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Navbar dark expand=\"md\">\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<NavbarToggler onClick={this.toggleNav} />\n\t\t\t\t\t\t<NavbarBrand className=\"mr-auto\" href=\"/\">Time Table Creator</NavbarBrand>\n\t\t\t\t\t\t<Collapse isOpen={this.state.isNavOpen} navbar>\n\t\t\t\t\t\t\t<Nav navbar>\n\t\t\t\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t\t\t\t<NavLink className=\"nav-link\" to='/home'><span className=\"fa fa-home fa-lg\" /> Home</NavLink>\n\t\t\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t</Collapse>\n\t\t\t\t\t</div>\n\t\t\t\t</Navbar>\n\t\t\t\t<hr />\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Header;","import React from 'react'\n\nexport default function Rows({course}) {\n\tvar cols = Object.keys(course).map((field) => {\n\t\treturn <td >{course[field]}</td>\n\t})\t\n\treturn (\n\t\t<tr>\n\t\t\t{cols}\n\t\t</tr>\n\t)\n}\n","import React, { Component } from 'react'\nimport Rows from './Rows';\nimport { Table } from 'reactstrap';\n\nexport default class TableData extends Component {\n\trender() {\n\t\tvar data = this.props.data.slice(1);\n\t\tvar headers = this.props.data[0]\n\t\tif (data) {\n\t\t\tvar rows = data.map(course => {\n\t\t\t\treturn <Rows course={course} />\n\n\t\t\t})\n\n\t\t\tvar header = headers.map((field) => {\n\t\t\t\treturn <th >{field}</th>\n\t\t\t})\n\n\t\t\treturn (\n\t\t\t\t<div className=\"col-12 text-center\">\n\t\t\t\t\t<Table striped bordered hover responsive>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t{header}\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{rows}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\telse {\n\t\t\treturn <h2> Try Uploading the database file<span className=\"fa fa-filter\" /></h2>\n\t\t}\n\t}\n}\n","import React, { Component } from 'react'\nimport TableData from './Table'\nimport { Form, Dropdown, Checkbox, Segment } from 'semantic-ui-react'\nimport { Spinner } from 'reactstrap';\n\nexport default class Plot extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tvar schedule = [\n\t\t\t[\"\", \"9:00-10:30\", \"10:30-12\", \"12:00-1:30\", \"1:30-2:30\", \"2:30-4:00\", \"4:00-5:30\"],\n\t\t\t[\"Mon\", \"\", \"\", \"\", \"L\", \"\", \"\",],\n\t\t\t[\"Tue\", \"\", \"\", \"\", \"U\", \"\", \"\",],\n\t\t\t[\"Wed\", \"\", \"\", \"\", \"N\", \"\", \"\",],\n\t\t\t[\"Thu\", \"\", \"\", \"\", \"C\", \"\", \"\",],\n\t\t\t[\"Fri\", \"\", \"\", \"\", \"H\", \"\", \"\",]\n\t\t]\n\t\tthis.state = {\n\t\t\tcourses: [],\n\t\t\tschedule,\n\t\t\tseason:false\n\t\t}\n\t\tthis.handleCourseChange = this.handleCourseChange.bind(this);\n\t\tthis.updateSchedule = this.updateSchedule.bind(this);\n\t\tthis.findpos = this.findpos.bind(this);\n\t}\n\n\tfindpos(course) {\n\t\tvar schedule = this.props.schedule[\"monsoon\"];\n\t\tif(this.state.season){\n\t\t\tschedule=this.props.schedule[\"winter\"]\n\t\t}\n\t\tvar pos = []\n\t\tfor (let i = 1; i <= 5; i++) {\n\t\t\tfor (let j = 1; j <= 6; j++) {\n\t\t\t\tif (schedule[i.toString()][j.toString()].includes(course)) {\n\t\t\t\t\tpos.push([i, j])\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn pos\n\n\t}\n\tupdateSchedule() {\n\t\tvar temp = [\n\t\t\t[\"\", \"9:00-10:30\", \"10:30-12\", \"12:00-1:30\", \"1:30-2:30\", \"2:30-4:00\", \"4:00-5:30\"],\n\t\t\t[\"Mon\", \"\", \"\", \"\", \"L\", \"\", \"\",],\n\t\t\t[\"Tue\", \"\", \"\", \"\", \"U\", \"\", \"\",],\n\t\t\t[\"Wed\", \"\", \"\", \"\", \"N\", \"\", \"\",],\n\t\t\t[\"Thu\", \"\", \"\", \"\", \"C\", \"\", \"\",],\n\t\t\t[\"Fri\", \"\", \"\", \"\", \"H\", \"\", \"\",]\n\t\t]\n\n\t\tfor (let i = 0; i < this.state.courses.length; i++) {\n\t\t\tvar allpos = this.findpos(this.state.courses[i]) //get all coordinates for a particular course\n\t\t\tfor (let pos = 0; pos < allpos.length; pos++) { // update at all the coordinates\n\t\t\t\tvar x = allpos[pos][0];\n\t\t\t\tvar y = allpos[pos][1]\n\t\t\t\ttemp[x][y] = temp[x][y].concat(this.state.courses[i])\n\t\t\t\ttemp[x][y] = temp[x][y].concat(\", \")\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({\n\t\t\tschedule: temp\n\t\t})\n\t}\n\n\thandleCourseChange(event, result) {\n\t\tconst { value } = result || event.target;\n\t\tthis.setState({\n\t\t\t...this.state.courses,\n\t\t\tcourses: value\n\t\t}, () => this.updateSchedule());\n\t}\n\n\tonChange(){\n\t\tthis.setState({\n\t\t\tseason:!this.state.season,\n\t\t\tcourses:[]\n\t\t})\n\t}\n\n\n\trender() {\n\t\tvar courselist = [\n\t\t\t{ key: \"loading\", value: <Spinner />, text: <Spinner />, disabled: true }\n\t\t]\n\t\tif (this.props.courselist){\n\t\t\tcourselist = this.props.courselist[\"monsoon\"]\n\t\t\tif(this.state.season){\n\t\t\t\tcourselist = this.props.courselist[\"winter\"]\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"container-fluid\">\n\t\t\t\t<div className=\"row\">\n\n\t\t\t\t<TableData data={this.state.schedule} />\n\t\t\t\t</div>\n\n\t\t\t\t<hr />\n\t\t\t\t<Segment>\n\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t<Form.Field inline>\n\t\t\t\t\t\t\t<label>Monsoon</label>\n\t\t\t\t\t\t\t<Checkbox slider disabled checked={this.state.season} onChange={this.onChange.bind(this)}/>\n\t\t\t\t\t\t\t<label>Winter</label>\n\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t</Form>\n\t\t\t\t\t\n\t\t\t\t</div>\n\n\t\t\t\t<Dropdown\n\t\t\t\t\tplaceholder=\"Select Courses\"\n\t\t\t\t\tfluid multiple search openOnFocus\n\t\t\t\t\tclearable selection options={courselist}\n\t\t\t\t\tvalue={this.state.courses}\n\t\t\t\t\tonChange={this.handleCourseChange}\n\t\t\t\t/>\n\t\t\t\t</Segment>\n\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter, Switch, Route, Redirect } from 'react-router-dom'\nimport { courseFetchAction, scheduleFetchAction } from '../store/ActionCreators'\nimport Header from './Header'\nimport Plot from './TimeTable/Plot'\n\nclass Main extends Component {\n\t\n\tcomponentDidMount(){\n\t\tthis.props.fetchCourse()\n\t\tthis.props.fetchScehdule()\n\t}\n\t\n\trender() {\n\t\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Header />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/home\" \n\t\t\t\t\t\tcomponent={() => <Plot \n\t\t\t\t\t\t\t\t\t\t\tcourselist={this.props.courses} \n\t\t\t\t\t\t\t\t\t\t\tschedule={this.props.schedule}\n\t\t\t\t\t\t\t\t\t\t/>}\n\t\t\t\t\t/>\n\t\t\t\t\t<Redirect to=\"/home\" />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t)\n\t}\n}\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tcourses: state.courses.courses,\n\t\tschedule: state.schedule.schedule,\n\t}\n}\nconst mapDispatchToProps = (dispatch) => ({\n\tfetchCourse: () => dispatch(courseFetchAction()),\n\tfetchScehdule: ()=>dispatch(scheduleFetchAction()),\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import axios from \"axios\";\nimport * as ActionTypes from \"./ActionTypes\";\nimport { jsonUrl } from \"../shared/baseUrl\";\n\n\nexport const courseFetchAction = () => {\n\treturn async (dispatch) => {\n\t\treturn await axios.get(jsonUrl+\"/courses\")\n\t\t\t.then(response => {\n\t\t\t\tif (!response.data.errmess)\n\t\t\t\t\tdispatch({ type: ActionTypes.COURSE_FETCH_SUCCESS, courses: response.data })\n\t\t\t\telse\n\t\t\t\t\tdispatch({ type: ActionTypes.COURSE_FETCH_FAILED, errmess: \"Courses Can't be Fetched\" })\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tdispatch({ type: ActionTypes.COURSE_FETCH_FAILED, errmess: \"Error in connection with Server\" })\n\t\t\t})\n\t}\n}\n\nexport const scheduleFetchAction = () => {\n\treturn async (dispatch) => {\n\t\treturn await axios.get(jsonUrl + \"/schedule\")\n\t\t\t.then(response => {\n\t\t\t\tif (!response.data.errmess)\n\t\t\t\t\tdispatch({ type: ActionTypes.SCHEDULE_FETCH_SUCCESS, schedule: response.data })\n\t\t\t\telse\n\t\t\t\t\tdispatch({ type: ActionTypes.SCHEDULE_FETCH_FAILED, errmess: \"Schedule Can't be Fetched\" })\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tdispatch({ type: ActionTypes.SCHEDULE_FETCH_FAILED , errmess: \"Error in connection with Server\" })\n\t\t\t})\n\t}\n}","export const COURSE_FETCH_FAILED = 'COURSE_FETCH_FAILED';\nexport const COURSE_FETCH_SUCCESS = 'COURSE_FETCH_SUCCESS';\nexport const SCHEDULE_FETCH_FAILED = 'SCHEDULE_FETCH_FAILED';\nexport const SCHEDULE_FETCH_SUCCESS = 'SCHEDULE_FETCH_SUCCESS';","import React from 'react';\nimport Main from \"./Components/Main\";\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Main />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as ActionTypes from \"../ActionTypes\";\n\nconst initState = {}\n\nconst courseReducer = (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase ActionTypes.COURSE_FETCH_SUCCESS:\n\t\t\tvar courses = action.courses;\n\t\t\treturn { ...state, courses, errmess: null };\n\t\tcase ActionTypes.COURSE_FETCH_FAILED:\n\t\t\treturn { ...state, errmess: action.errmess};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default courseReducer;","import * as ActionTypes from \"../ActionTypes\";\n\nconst initState = {}\n\nconst scheduleReducer = (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase ActionTypes.SCHEDULE_FETCH_SUCCESS:\n\t\t\tvar schedule = action.schedule;\n\t\t\treturn { ...state, schedule, errmess: null };\n\t\tcase ActionTypes.SCHEDULE_FETCH_FAILED:\n\t\t\treturn { ...state, errmess: action.errmess };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default scheduleReducer;","import { combineReducers } from 'redux';\nimport courseReducer from './courseReducer';\nimport scheduleReducer from './scheduleReducer'\n\nconst rootReducer = combineReducers({\n\tcourses: courseReducer,\n\tschedule: scheduleReducer,\n})\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport { configureStore } from './store/configureStore';\nimport { Provider } from 'react-redux';\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store} >\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport rootReducer from './reducers/rootReducer';\n\nexport const configureStore = () => {\n\tconst store = createStore(\n\t\trootReducer, \n\t\tapplyMiddleware(thunk, logger)\n\t);\n\treturn store;\n}"],"sourceRoot":""}