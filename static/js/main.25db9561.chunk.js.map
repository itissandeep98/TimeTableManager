{"version":3,"sources":["Components/Header.js","Components/TimeTable/Rows.js","Components/TimeTable/Table.js","shared/Schedule.js","Components/TimeTable/Plot.js","Components/ImpLinks.js","Components/Chat.js","Components/Main.js","store/ActionCreators.js","store/ActionTypes.js","shared/baseUrl.js","App.js","serviceWorker.js","store/reducers/courseReducer.js","store/reducers/scheduleReducer.js","store/reducers/rootReducer.js","store/Feedback.js","index.js","store/configureStore.js"],"names":["Header","className","style","color","Rows","cols","day","map","slot","length","background","List","items","TableData","headers","this","props","data","slice","rows","header","field","Table","striped","hover","responsive","Component","baseSchedule","Plot","state","courses","schedule","JSON","parse","stringify","season","handleCourseChange","bind","updateSchedule","findpos","course","pos","i","j","toString","includes","push","temp","allpos","x","y","setState","event","result","value","target","courselist","isLoading","key","Spinner","text","disabled","errmess","Button","onClick","window","print","Segment","Form","Field","inline","Checkbox","slider","checked","onChange","Dropdown","placeholder","fluid","multiple","search","openOnFocus","clearable","selection","options","ImpLink","href","rel","Divider","horizontal","Chat","message","showA","type","showAlert","onSubmit","toggleAlert","values","emailto","subject","name","axios","get","origUrl","params","then","resp","resetFeedbackform","id","circular","icon","Icon","size","UncontrolledPopover","trigger","placement","PopoverBody","Alert","isOpen","toggle","model","FormGroup","textarea","floated","positive","Main","fetchData","src","process","width","height","connect","dispatch","a","response","catch","error","actions","reset","App","Boolean","location","hostname","match","initState","courseReducer","action","scheduleReducer","rootReducer","combineReducers","createForms","feedback","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.25db9561.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.css'\n\nconst Header = () => { // main Header of the page\n\treturn (\n\t\t<>\n\t\t\t<div className=\"navbar-dark text-center d-print-none\">\n\t\t\t\t<h1 style={{color:\"#fff\"}}>Time Table Creator</h1>\n\t\t\t</div>\n\t\t\t<br/>\n\t\t</>\n\t);\n}\n\n\nexport default Header;","import React from 'react'\nimport { List } from 'semantic-ui-react'\n\nexport default function Rows({ day }) {\n\n\tvar cols = day.map(slot => {\n\t\treturn <td style={slot.length > 1 ? { background: \"#eb4034\" } : null} //check length of course in slot if greater than 1 then change its background and print the list\n\t\t\t\t\tclassName={slot.length > 0 ? \"border\" : null}\n\t\t\t\t>\t\n\t\t\t\t\t{<List items={slot} />}\n\t\t\t\t</td>\n\t})\n\treturn (\n\t\t<tr>\n\t\t\t{cols}\n\t\t</tr>\n\t)\n}\n","import React, { Component } from 'react'\nimport Rows from './Rows';\nimport { Table } from 'reactstrap';\n\nexport default class TableData extends Component {\n\trender() {\n\t\tvar headers = this.props.data[0] // get the header from schedule\n\t\tvar data = this.props.data.slice(1);  // get all data except the header\n\t\t\n\t\tif (data) {\n\t\t\tvar rows = data.map(day => { // create all the rows\n\t\t\t\treturn <Rows day={day} />\n\t\t\t})\n\n\t\t\tvar header = headers.map(field => { // create the header of table\n\t\t\t\treturn <th >{field}</th>\n\t\t\t})\n\n\t\t\treturn (\n\t\t\t\t<div className=\"col-12 text-center\">\n\t\t\t\t\t<Table striped  hover responsive className=\"border\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t{header}\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{rows}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t{header}\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t</Table>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\telse {\n\t\t\treturn <h2> Something Wrong happend<span className=\"fa fa-filter\" /></h2>\n\t\t}\n\t}\n}\n","export const baseSchedule = [ \n\t[[], [\"9:00-10:30\"], [\"10:30-12\"], [\"12:00-1:30\"], [\"1:30-2:30\"], [\"2:30-4:00\"], [\"4:00-5:30\"]],\n\t[[\"Mon\"], [], [], [], [], [], [],],\n\t[[\"Tue\"], [], [], [], [], [], [],],\n\t[[\"Wed\"], [], [], [], [], [], [],],\n\t[[\"Thu\"], [], [], [], [], [], [],],\n\t[[\"Fri\"], [], [], [], [], [], [],]\n] // initial schedule","import React, { Component } from 'react'\nimport TableData from './Table'\nimport { Form, Dropdown, Checkbox, Segment } from 'semantic-ui-react'\nimport { Spinner, Button } from 'reactstrap';\nimport { baseSchedule } from '../../shared/Schedule'\nimport '../../App.css'\n\nexport default class Plot extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcourses: [],\n\t\t\tschedule: JSON.parse(JSON.stringify(baseSchedule)),\n\t\t\tseason: false\n\t\t}\n\t\tthis.handleCourseChange = this.handleCourseChange.bind(this);\n\t\tthis.updateSchedule = this.updateSchedule.bind(this);\n\t\tthis.findpos = this.findpos.bind(this);\n\t}\n\n\tfindpos(course) {  // finds all the positions of a particular course in the schedule\n\t\tvar schedule = this.props.schedule[\"monsoon\"];\n\t\tif (this.state.season) {\n\t\t\tschedule = this.props.schedule[\"winter\"]\n\t\t}\n\t\tvar pos = []\n\t\tfor (let i = 1; i <= 5; i++) {\n\t\t\tfor (let j = 1; j <= 6; j++) {\n\t\t\t\tif (schedule[i.toString()][j.toString()].includes(course)) {\n\t\t\t\t\tpos.push([i, j])\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn pos\n\n\t}\n\t\n\tupdateSchedule() {\n\t\tvar temp = JSON.parse(JSON.stringify(baseSchedule))\n\n\t\tfor (let i = 0; i < this.state.courses.length; i++) {\n\t\t\tvar allpos = this.findpos(this.state.courses[i]) //get all coordinates for a particular course\n\t\t\tfor (let pos = 0; pos < allpos.length; pos++) { // update at all the coordinates\n\t\t\t\tvar x = allpos[pos][0];\n\t\t\t\tvar y = allpos[pos][1]\n\t\t\t\ttemp[x][y].push(this.state.courses[i])\n\t\t\t}\n\t\t}\n\t\tthis.setState({\n\t\t\tschedule: temp\n\t\t})\n\t}\n\n\thandleCourseChange(event, result) {   // To handle the changes in the courses list\n\t\tconst { value } = result || event.target;\n\t\tthis.setState({\n\t\t\t...this.state.courses,\n\t\t\tcourses: value\n\t\t}, () => this.updateSchedule());\n\t}\n\n\tonChange() {  // to handle the change in the season toggle\n\t\tthis.setState({\n\t\t\tseason: !this.state.season,\n\t\t\tcourses: []\n\t\t})\n\t}\n\n\n\trender() {\n\t\tvar courselist = null;\n\t\tif (this.props.isLoading) { // Loading Icon in the List until data is fetched\n\t\t\tcourselist = [\n\t\t\t\t{ key: \"loading\", value: <Spinner />, text: <Spinner />, disabled: true }\n\t\t\t]\n\t\t}\n\t\telse if (this.props.errmess) {  // Error message in the list if data could not be fetched\n\t\t\tcourselist = [\n\t\t\t\t{ key: \"error\", value: this.props.errmess, text: this.props.errmess, disabled: true }\n\t\t\t]\n\t\t}\n\n\t\telse { // select data based on the the season toggle\n\t\t\tcourselist = this.props.courses[\"monsoon\"]\n\t\t\tif (this.state.season) {\n\t\t\t\tcourselist = this.props.courses[\"winter\"]\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<Button onClick={() => window.print()} className=\"d-print-none printbutton\"> \n\t\t\t\t\t<span className=\"fa fa-file\"/> Print To pdf\n\t\t\t\t</Button>\n\t\t\t\t<br/><br/>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<TableData data={this.state.schedule} />\n\t\t\t\t</div>\n\n\t\t\t\t<Segment className=\"d-print-none\">\n\t\t\t\t\t<div className=\"text-center\">\n\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<Form.Field inline>\n\t\t\t\t\t\t\t\t<label>Monsoon</label>\n\t\t\t\t\t\t\t\t<Checkbox slider disabled checked={this.state.season} onChange={this.onChange.bind(this)} />\n\t\t\t\t\t\t\t\t<label>Winter</label>\n\t\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Dropdown\n\t\t\t\t\t\tplaceholder=\"Select Courses\"\n\t\t\t\t\t\tfluid multiple search openOnFocus\n\t\t\t\t\t\tclearable selection options={courselist}\n\t\t\t\t\t\tvalue={this.state.courses}\n\t\t\t\t\t\tonChange={this.handleCourseChange}\n\t\t\t\t\t\t\n\t\t\t\t\t/>\n\t\t\t\t</Segment>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React from 'react'\nimport { Divider } from 'semantic-ui-react';\nimport '../style.css'\n\nexport const ImpLink = () => { // Links to show in the bottom of table\n\treturn (\n\t\t<div className=\"container d-print-none\">\n\t\t\t<br/>\n\t\t\t<h2>Important Links</h2>\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"https://drive.google.com/drive/folders/1YqptkWKt6iKvoImkJYRlB_2yRH69K_D2\" target=\"_blank\" rel=\"noopener noreferrer\">Course Descriptions</a>\n\t\t\t\t</li>\n\t\t\t\t{/* <li>\n\t\t\t\t\t<a href=\"https://docs.google.com/document/d/1v8EJcxPvXgtNYNFtnUjrvdiP3F5UZMM3vqw7HcDsN7A\" target=\"_blank\" rel=\"noopener noreferrer\">Review of electives</a>\n\t\t\t\t</li> */}\n\t\t\t\t<li>\n\t\t\t\t\tCurrent Time Table <a href=\"https://iiitd.ac.in/academics/m2020\" target=\"_blank\" rel=\"noopener noreferrer\">(Monsoon 2020)</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<Divider horizontal>updated on 29 Jul 2020</Divider>\n\n\t\t</div>\n\t);\n}","import React, { Component } from 'react'\nimport { FormGroup, Alert, PopoverBody } from 'reactstrap';\nimport { Button, Icon } from 'semantic-ui-react';\nimport { origUrl } from '../shared/baseUrl';\nimport axios from 'axios';\nimport { Control, Form } from 'react-redux-form';\nimport { UncontrolledPopover } from 'reactstrap'\nimport '../App.css'\n\nclass Chat extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmessage: \"\",\n\t\t\tshowA: false,\n\t\t\ttype: \"\",\n\t\t}\n\t\tthis.showAlert = this.showAlert.bind(this);\n\t\tthis.onSubmit = this.onSubmit.bind(this)\n\t\tthis.toggleAlert = this.toggleAlert.bind(this);\n\n\n\t}\n\n\n\tshowAlert(type, message) { // for showing success message in the chat\n\t\tthis.setState({\n\t\t\tshowA: true,\n\t\t\tmessage: message,\n\t\t\ttype: type\n\t\t})\n\t}\n\n\ttoggleAlert() {  // toggling the success alert\n\t\tthis.setState({\n\t\t\tshowA: !this.state.showA\n\t\t})\n\t}\n\n\tonSubmit(values) {  // submit the feedback form. sends a request to my flask api with all the data which in turn sends me a mail\n\t\tconst data = {\n\t\t\temailto: \"itissandeep98@gmail.com\",\n\t\t\tmessage: values.message,\n\t\t\tsubject: \"TimeTableManager: Message from \" + values.name\n\t\t}\n\t\taxios.get(origUrl + \"sendmail\", { params: data })\n\t\t\t.then(resp => {\n\t\t\t\tthis.showAlert(\"info\", \"Feedback Sent ;)\")\n\t\t\t});\n\t\tthis.props.resetFeedbackform()\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Button id=\"chatbutton\" circular icon color='black'>\n\t\t\t\t<Icon name='chat' size=\"large\" />\n\t\t\t\t<UncontrolledPopover trigger=\"legacy\" placement=\"top\" target=\"chatbutton\">\n\t\t\t\t\t<PopoverBody className=\"text-center\">\n\t\t\t\t\t\t<Alert color={this.state.type} isOpen={this.state.showA} toggle={this.toggleAlert}>\n\t\t\t\t\t\t\t{this.state.message}\n\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t<Form model='feedback' onSubmit={(values) => this.onSubmit(values)}>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<Control.text\n\t\t\t\t\t\t\t\t\tmodel=\".name\"\n\t\t\t\t\t\t\t\t\tclassName=\"form-control feed-input\"\n\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Name\"\n\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t<Control.textarea\n\t\t\t\t\t\t\t\t\tmodel=\".message\"\n\t\t\t\t\t\t\t\t\tclassName=\"form-control feed-input\"\n\t\t\t\t\t\t\t\t\tname=\"message\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Feedback\"\n\t\t\t\t\t\t\t\t\trows={5}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t<Button circular floated positive> <span className=\"fa fa-paper-plane\" /> Send</Button>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</PopoverBody>\n\t\t\t\t</UncontrolledPopover>\n\t\t\t</Button>\n\t\t)\n\t}\n}\n\n\nexport default Chat;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { dataFetchAction } from '../store/ActionCreators'\nimport Header from './Header'\nimport Plot from './TimeTable/Plot'\nimport { ImpLink } from './ImpLinks'\nimport { actions } from 'react-redux-form'\n\nimport Chat from './Chat'\n\nclass Main extends Component {\n\n\tcomponentDidMount() {\n\t\tthis.props.fetchData() // fetch all the data when the webpage is loaded\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Header />\n\t\t\t\t<Plot\n\t\t\t\t\tcourses={this.props.courses.courses}\n\t\t\t\t\tschedule={this.props.schedule.schedule}\n\t\t\t\t\tisLoading={this.props.courses.isLoading}\n\t\t\t\t\terrmess={this.props.courses.errmess}\n\t\t\t\t/>\n\t\t\t\t<ImpLink />\n\t\t\t\t<Chat resetFeedbackform={this.props.resetFeedbackform} />\n\t\t\t\t\n\t\t\t\t<div className=\"text-center d-none d-md-block d-print-none\"> \n\t\t\t\t\t<embed src={process.env.PUBLIC_URL + \"/assets/ttv6.pdf\"} type=\"application/pdf\" width=\"70%\" height=\"800px\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\nconst mapStateToProps = (state) => {  // Redux props\n\treturn {\n\t\tcourses: state.courses,\n\t\tschedule: state.schedule,\n\t}\n}\nconst mapDispatchToProps = (dispatch) => ({ // redux functions\n\tfetchData: () => dispatch(dataFetchAction()),\n\tresetFeedbackform: () => { dispatch(actions.reset('feedback')) },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","import axios from \"axios\";\nimport * as ActionTypes from \"./ActionTypes\";\nimport { jsonUrl } from \"../shared/baseUrl\";\n\n\nexport const dataFetchAction = () => {\n\treturn async (dispatch) => {\n\t\tdispatch({type:ActionTypes.DATA_FETCH_LOADING})\n\t\treturn await axios.get(jsonUrl)\n\t\t\t.then(response => {\n\t\t\t\tif (!response.data.errmess){\n\t\t\t\t\tdispatch({ type: ActionTypes.COURSE_FETCH_SUCCESS, courses: response.data.courses })\n\t\t\t\t\tdispatch({ type: ActionTypes.SCHEDULE_FETCH_SUCCESS, schedule: response.data.schedule })\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tdispatch({ type: ActionTypes.DATA_FETCH_FAILED, errmess: \"Error in fetched data. Try reloading\" })\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tdispatch({ type: ActionTypes.DATA_FETCH_FAILED, errmess: \"Error in connection with Server. Try reloading\" })\n\t\t\t})\n\t}\n}\n","export const DATA_FETCH_FAILED = 'DATA_FETCH_FAILED';\nexport const DATA_FETCH_LOADING=\"DATA_FETCH_LOADING\";\nexport const COURSE_FETCH_SUCCESS = 'COURSE_FETCH_SUCCESS';\nexport const SCHEDULE_FETCH_SUCCESS = 'SCHEDULE_FETCH_SUCCESS';","export const jsonUrl = \"https://jsonserver-f.herokuapp.com/itissandeep98/TimeTableManager\" // url for fecthing the data\nexport const origUrl = \"https://jsonserver-f.herokuapp.com/\" // url for sending feedback","import React from 'react';\nimport Main from \"./Components/Main\";\nimport './App.css';\n\nfunction App() {\n\n  return (\n      <div className=\"App\">\n        <Main />\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as ActionTypes from \"../ActionTypes\";\n\nconst initState = {isLoading:true}\n\nconst courseReducer = (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase ActionTypes.DATA_FETCH_LOADING:\n\t\t\treturn {...state, isLoading:true}\n\t\tcase ActionTypes.COURSE_FETCH_SUCCESS:\n\t\t\tvar courses = action.courses;\n\t\t\treturn { ...state, courses, errmess: null, isLoading: false };\n\t\tcase ActionTypes.DATA_FETCH_FAILED:\n\t\t\treturn { ...state, errmess: action.errmess, isLoading: false};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default courseReducer;","import * as ActionTypes from \"../ActionTypes\";\n\nconst initState = {}\n\nconst scheduleReducer = (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase ActionTypes.SCHEDULE_FETCH_SUCCESS:\n\t\t\tvar schedule = action.schedule;\n\t\t\treturn { ...state, schedule, errmess: null };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default scheduleReducer;","import { combineReducers } from 'redux';\nimport courseReducer from './courseReducer';\nimport scheduleReducer from './scheduleReducer'\nimport { createForms } from \"react-redux-form\";\nimport { InitialFeedback } from '../Feedback';\n\nconst rootReducer = combineReducers({\n\tcourses: courseReducer,\n\tschedule: scheduleReducer,\n\t...createForms({\n\t\tfeedback: InitialFeedback\n\t})\n})\n\nexport default rootReducer","export const InitialFeedback = {\n\tname: '',\n\tmessage: ''\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport { configureStore } from './store/configureStore';\nimport { Provider } from 'react-redux';\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store} >\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport rootReducer from './reducers/rootReducer';\n\nexport const configureStore = () => {\n\tconst store = createStore(\n\t\trootReducer, \n\t\tprocess.env.NODE_ENV === 'production' ? applyMiddleware(thunk) : applyMiddleware(thunk, logger)\n\t);\n\treturn store;\n}"],"sourceRoot":""}