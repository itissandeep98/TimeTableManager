{"version":3,"sources":["Components/Header.js","Components/TimeTable/Rows.js","Components/TimeTable/Table.js","Components/TimeTable/Plot.js","Components/Chat.js","Components/Footer.js","Components/Main.js","store/ActionCreators.js","store/ActionTypes.js","shared/baseUrl.js","App.js","serviceWorker.js","store/reducers/courseReducer.js","store/reducers/scheduleReducer.js","store/reducers/rootReducer.js","index.js","store/configureStore.js"],"names":["Header","props","state","isNavOpen","toggleNav","bind","this","setState","Navbar","dark","expand","className","NavbarToggler","onClick","NavbarBrand","href","Collapse","isOpen","navbar","Nav","NavItem","to","Component","Rows","day","cols","Object","keys","map","slot","style","length","background","List","items","TableData","data","slice","headers","rows","header","field","Table","striped","hover","responsive","Plot","courses","schedule","season","handleCourseChange","updateSchedule","findpos","course","pos","i","j","toString","includes","push","temp","allpos","x","y","event","result","value","target","courselist","isLoading","key","Spinner","text","disabled","errmess","Segment","Form","Field","inline","Checkbox","slider","checked","onChange","Dropdown","placeholder","fluid","multiple","search","openOnFocus","clearable","selection","options","Chat","e","preventDefault","emailto","message","subject","name","axios","get","origUrl","params","onSubmit","FormGroup","Input","type","innerRef","input","Button","circular","floated","positive","Footer","useState","open","setOpen","Popup","content","on","onClose","onOpen","trigger","icon","color","Icon","size","position","Main","fetchData","path","component","withRouter","connect","dispatch","a","then","response","catch","error","App","basename","process","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","initState","courseReducer","action","scheduleReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById","URL","origin","addEventListener","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5f238b7b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, NavbarToggler, Collapse, Nav, NavItem } from 'reactstrap';\nimport '../App.css'\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisNavOpen: false,\n\t\t};\n\t\tthis.toggleNav = this.toggleNav.bind(this);\n\t}\n\n\ttoggleNav() {\n\t\tthis.setState({\n\t\t\tisNavOpen: !this.state.isNavOpen\n\t\t});\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Navbar dark expand=\"md\">\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<NavbarToggler onClick={this.toggleNav} />\n\t\t\t\t\t\t<NavbarBrand className=\"mr-auto\" href=\"/\">Time Table Creator</NavbarBrand>\n\t\t\t\t\t\t<Collapse isOpen={this.state.isNavOpen} navbar>\n\t\t\t\t\t\t\t<Nav navbar>\n\t\t\t\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t\t\t\t<NavLink className=\"nav-link\" to='/home'><span className=\"fa fa-home fa-lg\" /> Home</NavLink>\n\t\t\t\t\t\t\t\t</NavItem>\n\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t</Collapse>\n\t\t\t\t\t</div>\n\t\t\t\t</Navbar>\n\t\t\t\t<hr />\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default Header;","import React from 'react'\nimport { List } from 'semantic-ui-react'\n\nexport default function Rows({day}) {\n\t\n\tvar cols = Object.keys(day).map((slot) => {\n\t\treturn <td \n\t\t\t\t\tstyle={day[slot].length > 1 ? { background: \"#eb4034\" } : null} \n\t\t\t\t\tclassName={day[slot].length > 0 ?\"border\":null}>\n\t\t\t\t\t{<List items={day[slot]}/>}\n\t\t\t\t</td>\n\t})\t\n\treturn (\n\t\t<tr>\n\t\t\t{cols}\n\t\t</tr>\n\t)\n}\n","import React, { Component } from 'react'\nimport Rows from './Rows';\nimport { Table } from 'reactstrap';\n\nexport default class TableData extends Component {\n\trender() {\n\t\tvar data = this.props.data.slice(1);\n\t\tvar headers = this.props.data[0]\n\t\tif (data) {\n\t\t\tvar rows = data.map(day => {\n\t\t\t\treturn <Rows day={day} />\n\n\t\t\t})\n\n\t\t\tvar header = headers.map((field) => {\n\t\t\t\treturn <th >{field}</th>\n\t\t\t})\n\n\t\t\treturn (\n\t\t\t\t<div className=\"col-12 text-center\">\n\t\t\t\t\t<Table striped  hover responsive>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t{header}\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{rows}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</Table>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t\telse {\n\t\t\treturn <h2> Try Uploading the database file<span className=\"fa fa-filter\" /></h2>\n\t\t}\n\t}\n}\n","import React, { Component } from 'react'\nimport TableData from './Table'\nimport { Form, Dropdown, Checkbox, Segment } from 'semantic-ui-react'\nimport { Spinner } from 'reactstrap';\n\nexport default class Plot extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tvar schedule = [\n\t\t\t[[], [\"9:00-10:30\"], [\"10:30-12\"], [\"12:00-1:30\"], [\"1:30-2:30\"],[ \"2:30-4:00\"], [\"4:00-5:30\"]],\n\t\t\t[[\"Mon\"], [], [], [], [], [], [],],\n\t\t\t[[\"Tue\"], [], [], [], [], [], [],],\n\t\t\t[[\"Wed\"], [], [], [], [], [], [],],\n\t\t\t[[\"Thu\"], [], [], [], [], [], [],],\n\t\t\t[[\"Fri\"], [], [], [], [], [], [],]\n\t\t]\n\t\tthis.state = {\n\t\t\tcourses: [],\n\t\t\tschedule,\n\t\t\tseason:false\n\t\t}\n\t\tthis.handleCourseChange = this.handleCourseChange.bind(this);\n\t\tthis.updateSchedule = this.updateSchedule.bind(this);\n\t\tthis.findpos = this.findpos.bind(this);\n\t}\n\n\tfindpos(course) {\n\t\tvar schedule = this.props.schedule[\"monsoon\"];\n\t\tif(this.state.season){\n\t\t\tschedule=this.props.schedule[\"winter\"]\n\t\t}\n\t\tvar pos = []\n\t\tfor (let i = 1; i <= 5; i++) {\n\t\t\tfor (let j = 1; j <= 6; j++) {\n\t\t\t\tif (schedule[i.toString()][j.toString()].includes(course)) {\n\t\t\t\t\tpos.push([i, j])\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn pos\n\n\t}\n\tupdateSchedule() {\n\t\tvar temp = [\n\t\t\t[[], [\"9:00-10:30\"], [\"10:30-12\"], [\"12:00-1:30\"], [\"1:30-2:30\"],[ \"2:30-4:00\"], [\"4:00-5:30\"]],\n\t\t\t[[\"Mon\"], [], [], [], [], [], [],],\n\t\t\t[[\"Tue\"], [], [], [], [], [], [],],\n\t\t\t[[\"Wed\"], [], [], [], [], [], [],],\n\t\t\t[[\"Thu\"], [], [], [], [], [], [],],\n\t\t\t[[\"Fri\"], [], [], [], [], [], [],]\n\t\t]\n\n\t\tfor (let i = 0; i < this.state.courses.length; i++) {\n\t\t\tvar allpos = this.findpos(this.state.courses[i]) //get all coordinates for a particular course\n\t\t\tfor (let pos = 0; pos < allpos.length; pos++) { // update at all the coordinates\n\t\t\t\tvar x = allpos[pos][0];\n\t\t\t\tvar y = allpos[pos][1]\n\t\t\t\ttemp[x][y].push(this.state.courses[i])\n\t\t\t}\n\t\t}\n\t\tthis.setState({\n\t\t\tschedule: temp\n\t\t})\n\t}\n\n\thandleCourseChange(event, result) {\n\t\tconst { value } = result || event.target;\n\t\tthis.setState({\n\t\t\t...this.state.courses,\n\t\t\tcourses: value\n\t\t}, () => this.updateSchedule());\n\t}\n\n\tonChange(){\n\t\tthis.setState({\n\t\t\tseason:!this.state.season,\n\t\t\tcourses:[]\n\t\t})\n\t}\n\n\n\trender() {\n\t\tvar courselist = null;\n\t\tif (this.props.isLoading){\n\t\t\tcourselist = [\n\t\t\t\t{ key: \"loading\", value: <Spinner />, text: <Spinner />, disabled: true }\n\t\t\t]\n\t\t}\n\t\telse if (this.props.errmess){\n\t\t\tcourselist = [\n\t\t\t\t{ key: \"error\", value: this.props.errmess, text: this.props.errmess, disabled: true }\n\t\t\t]\n\t\t}\n\n\t\telse{\n\t\t\tcourselist = this.props.courses[\"monsoon\"]\n\t\t\tif(this.state.season){\n\t\t\t\tcourselist = this.props.courses[\"winter\"]\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t{/* <div className=\"row \">\n\t\t\t\t\t<div className=\"col-2\">\n\t\t\t\t\t<Button onClick={()=>{window.print()}}> Print</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div> */}\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<TableData data={this.state.schedule} />\n\t\t\t\t</div>\n\n\t\t\t\t<hr />\n\t\t\t\t<Segment>\n\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\n\t\t\t\t\t<Form>\n\t\t\t\t\t\t<Form.Field inline>\n\t\t\t\t\t\t\t<label>Monsoon</label>\n\t\t\t\t\t\t\t<Checkbox slider disabled checked={this.state.season} onChange={this.onChange.bind(this)}/>\n\t\t\t\t\t\t\t<label>Winter</label>\n\t\t\t\t\t\t</Form.Field>\n\t\t\t\t\t</Form>\n\t\t\t\t\t\n\t\t\t\t</div>\n\n\t\t\t\t<Dropdown\n\t\t\t\t\tplaceholder=\"Select Courses\"\n\t\t\t\t\tfluid multiple search openOnFocus\n\t\t\t\t\tclearable selection options={courselist}\n\t\t\t\t\tvalue={this.state.courses}\n\t\t\t\t\tonChange={this.handleCourseChange}\n\t\t\t\t/>\n\t\t\t\t</Segment>\n\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react'\nimport { FormGroup, Form, Input } from 'reactstrap';\nimport { Button } from 'semantic-ui-react';\nimport { origUrl } from '../shared/baseUrl';\nimport axios from 'axios';\n\nclass Chat extends Component {\n\n\tonSubmit(e){\n\t\te.preventDefault()\n\t\tconst data={\n\t\t\temailto:\"itissandeep98@gmail.com\",\n\t\t\tmessage :this.message.value,\n\t\t\tsubject: \"TimeTableManager: Message from \" + this.name.value\n\t\t}\n\t\taxios.get(origUrl + \"sendmail\", { params: data });\n\t\tthis.name.value=\"\";\n\t\tthis.message.value=\"\";\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"text-center\">\n\t\t\t\t<Form onSubmit={this.onSubmit.bind(this)}>\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\t\tname=\"name\" \n\t\t\t\t\t\t\tplaceholder=\"Name\" \n\t\t\t\t\t\t\tinnerRef={(input) => this.name = input}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\ttype=\"textarea\"\n\t\t\t\t\t\t\tname=\"message\"\n\t\t\t\t\t\t\tplaceholder=\"Feedback\"\n\t\t\t\t\t\t\tinnerRef={(input) => this.message = input}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t\t<Button circular floated positive> <span className=\"fa fa-paper-plane\"/> Send</Button>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\nexport default Chat;","import React, { useState } from 'react'\nimport { Button, Icon, Popup } from 'semantic-ui-react'\nimport { Navbar, NavItem, Nav } from 'reactstrap'\nimport Chat from './Chat'\n\nconst Footer = () => {\n\tconst [open, setOpen] = useState(false)\n\treturn (\n\t\t<div className=\"text-center\">\n\t\t\t<Navbar>\n\t\t\t\t<Nav navbar/>\n\t\t\t\t<Nav navbar>\n\t\t\t\t\t<NavItem>\n\t\t\t\t\t\t<Popup\n\t\t\t\t\t\t\tcontent={<Chat/>}\n\t\t\t\t\t\t\ton='click'\n\t\t\t\t\t\t\tonClose={() => setOpen(false)}\n\t\t\t\t\t\t\tonOpen={() => setOpen(true)}\n\t\t\t\t\t\t\topen={open}\n\t\t\t\t\t\t\ttrigger={<Button circular icon color='black' >\n\t\t\t\t\t\t\t\t\t\t<Icon name='chat' size=\"large\" />\n\t\t\t\t\t\t\t\t\t</Button>}\n\t\t\t\t\t\t\tposition=\"top right\"\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t/>\n\t\t\t\t\t</NavItem>\n\t\t\t\t</Nav>\n\t\t\t</Navbar>\n\t\t\t\n\t\t</div>\n\t)\n}\nexport default Footer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter, Switch, Route, Redirect } from 'react-router-dom'\nimport { dataFetchAction } from '../store/ActionCreators'\nimport Header from './Header'\nimport Plot from './TimeTable/Plot'\nimport Footer from './Footer'\n\nclass Main extends Component {\n\t\n\tcomponentDidMount(){\n\t\tthis.props.fetchData()\n\t}\n\t\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Header />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/home\" \n\t\t\t\t\t\tcomponent={() => <Plot \n\t\t\t\t\t\t\t\t\t\t\tcourses={this.props.courses.courses} \n\t\t\t\t\t\t\t\t\t\t\tschedule={this.props.schedule}\n\t\t\t\t\t\t\t\t\t\t\tisLoading={this.props.courses.isLoading}\n\t\t\t\t\t\t\t\t\t\t\terrmess={this.props.courses.errmess}\n\t\t\t\t\t\t\t\t\t\t/>}\n\t\t\t\t\t/>\n\t\t\t\t\t<Redirect to=\"/home\" />\n\t\t\t\t</Switch>\n\t\t\t\t<Footer/>\n\t\t\t</div>\n\t\t)\n\t}\n}\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tcourses: state.courses,\n\t\tschedule: state.schedule.schedule,\n\t}\n}\nconst mapDispatchToProps = (dispatch) => ({\n\tfetchData: () => dispatch(dataFetchAction()),\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import axios from \"axios\";\nimport * as ActionTypes from \"./ActionTypes\";\nimport { jsonUrl } from \"../shared/baseUrl\";\n\n\nexport const dataFetchAction = () => {\n\treturn async (dispatch) => {\n\t\tdispatch({type:ActionTypes.DATA_FETCH_LOADING})\n\t\treturn await axios.get(jsonUrl)\n\t\t\t.then(response => {\n\t\t\t\tif (!response.data.errmess){\n\t\t\t\t\tdispatch({ type: ActionTypes.COURSE_FETCH_SUCCESS, courses: response.data.courses })\n\t\t\t\t\tdispatch({ type: ActionTypes.SCHEDULE_FETCH_SUCCESS, schedule: response.data.schedule })\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tdispatch({ type: ActionTypes.DATA_FETCH_FAILED, errmess: \"Error in fetched data. Try reloading\" })\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tdispatch({ type: ActionTypes.DATA_FETCH_FAILED, errmess: \"Error in connection with Server. Try reloading\" })\n\t\t\t})\n\t}\n}\n","export const DATA_FETCH_FAILED = 'DATA_FETCH_FAILED';\nexport const DATA_FETCH_LOADING=\"DATA_FETCH_LOADING\";\nexport const COURSE_FETCH_SUCCESS = 'COURSE_FETCH_SUCCESS';\nexport const SCHEDULE_FETCH_SUCCESS = 'SCHEDULE_FETCH_SUCCESS';","export const baseUrl = \"https://gh-flask.herokuapp.com\"\nexport const jsonUrl = \"https://jsonserver-f.herokuapp.com/itissandeep98/TimeTableManager\"\nexport const origUrl = \"https://jsonserver-f.herokuapp.com/\"","import React from 'react';\nimport Main from \"./Components/Main\";\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Main />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as ActionTypes from \"../ActionTypes\";\n\nconst initState = {isLoading:true}\n\nconst courseReducer = (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase ActionTypes.DATA_FETCH_LOADING:\n\t\t\treturn {...state, isLoading:true}\n\t\tcase ActionTypes.COURSE_FETCH_SUCCESS:\n\t\t\tvar courses = action.courses;\n\t\t\treturn { ...state, courses, errmess: null, isLoading: false };\n\t\tcase ActionTypes.DATA_FETCH_FAILED:\n\t\t\treturn { ...state, errmess: action.errmess, isLoading: false};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default courseReducer;","import * as ActionTypes from \"../ActionTypes\";\n\nconst initState = {}\n\nconst scheduleReducer = (state = initState, action) => {\n\tswitch (action.type) {\n\t\tcase ActionTypes.SCHEDULE_FETCH_SUCCESS:\n\t\t\tvar schedule = action.schedule;\n\t\t\treturn { ...state, schedule, errmess: null };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default scheduleReducer;","import { combineReducers } from 'redux';\nimport courseReducer from './courseReducer';\nimport scheduleReducer from './scheduleReducer'\n\nconst rootReducer = combineReducers({\n\tcourses: courseReducer,\n\tschedule: scheduleReducer,\n})\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport { configureStore } from './store/configureStore';\nimport { Provider } from 'react-redux';\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store} >\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport rootReducer from './reducers/rootReducer';\n\nexport const configureStore = () => {\n\tconst store = createStore(\n\t\trootReducer, \n\t\tapplyMiddleware(thunk, logger)\n\t);\n\treturn store;\n}"],"sourceRoot":""}